color = score_percentile,
lty = score_percentile
)
) +
geom_line() +
geom_vline(xintercept = as.Date("2022-11-30"), linetype = "dashed") +
labs(
title = paste("Mentions Index by Exposure Quintiles"),
x = "Date",
y = "Mentions Index",
color = "-tiles",
linetype = "-tiles"
) +
theme_minimal() -> p
ggplotly(p)
skills_exposure %>%
group_by(esco_skill_level_3, ai_product_exposure, dmax) %>%
filter(!is.na(ai_product_exposure)) %>%
summarise(
mentions = sum(mentions),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(ai_product_exposure, 7)
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:7))
skills_exposure %>%
group_by(esco_skill_level_3, ai_product_exposure, dmax) %>%
filter(!is.na(ai_product_exposure)) %>%
summarise(
mentions = sum(mentions),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(ai_product_exposure, 7)
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:7)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mentions = sum(mentions)
)
skills_exposure %>%
group_by(esco_skill_level_3, ai_product_exposure, dmax) %>%
filter(!is.na(ai_product_exposure)) %>%
summarise(
mentions = sum(mentions),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(ai_product_exposure, 7)
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:7)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mentions = sum(mentions)
) %>%
group_by(score_percentile) %>%
mutate(
mentions_index = mentions / first(mentions) * 100
)
skills_exposure %>%
group_by(esco_skill_level_3, ai_product_exposure, dmax) %>%
filter(!is.na(ai_product_exposure)) %>%
summarise(
mentions = sum(mentions),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(ai_product_exposure, 7)
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:7)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mentions = sum(mentions)
) %>%
group_by(score_percentile) %>%
mutate(
mentions_index = mentions / first(mentions) * 100
) %>% print(n = Inf)
skills_exposure %>%
group_by(esco_skill_level_3, ai_product_exposure, dmax) %>%
filter(!is.na(ai_product_exposure)) %>%
summarise(
mentions = sum(mentions),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(ai_product_exposure, 7)
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:7)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mentions = sum(mentions)
) %>%
group_by(score_percentile) %>%
mutate(
mentions_index = mentions / first(mentions) * 100
) %>%
ggplot(
aes(
x = dmax,
y = mentions_index,
color = score_percentile,
lty = score_percentile
)
) +
geom_line() +
geom_vline(xintercept = as.Date("2022-11-30"), linetype = "dashed") +
labs(
title = paste("Mentions Index by Exposure Quintiles"),
x = "Date",
y = "Mentions Index",
color = "-tiles",
linetype = "-tiles"
) +
theme_minimal()
skills_exposure
skills_exposure %>%
group_by(
esco_skill_level_3,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
)
# twfe --------------------------------------------------------------------
skills_twfe <- skills_exposure %>%
group_by(
esco_skill_level_3,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
post_chatgpt = dmax > as.Date("2022-11-30")
)
skills_twfe
skills_twfe <- skills_exposure %>%
group_by(
esco_skill_level_3,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
post_chatgpt = dmax > t0,
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
# twfe --------------------------------------------------------------------
t0 <- as.Date("2022-11-30")
skills_twfe <- skills_exposure %>%
group_by(
esco_skill_level_3,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
post_chatgpt = dmax > t0,
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
skills_twfe
skills_exposure %>%
group_by(
esco_skill_level_3,
idcountry,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
log_mentions = log(mentions + 1),
post_chatgpt = dmax > t0,
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
model_event_study <- feols(
as.formula(paste("log_OJA ~", exposure_var, ": i(event_time, ref = 0) |", esco_level, "+ idcountry")),
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = data,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
library(fixest)
model_event_study <- feols(
as.formula(paste("log_OJA ~", exposure_var, ": i(event_time, ref = 0) |", esco_level, "+ idcountry")),
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = data,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
model_event_study <- feols(
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = data,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
model_event_study <- feols(
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = skills_twfe,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
skills_twfe <- skills_exposure %>%
group_by(
esco_skill_level_3,
#idcountry,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
log_mentions = log(mentions + 1),
post_chatgpt = dmax > t0,
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
model_event_study <- feols(
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = skills_twfe,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
summary(model_event_study)
model_twfe <- feols(
log_mentions ~ ai_product_exposure:post_chatgpt | esco_skill_level_3, #+ idcountry,
data = skills_twfe,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
model_twfe
skills_twfe <- skills_exposure %>%
group_by(
esco_skill_level_3,
#idcountry,
dmax,
ai_product_exposure
) %>%
summarise(
mentions = sum(mentions)
) %>%
mutate(
log_mentions = log(mentions + 1),
post_chatgpt = (dmax > t0)*1,
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
model_event_study <- feols(
log_mentions ~ ai_product_exposure:i(event_time, ref = 0) | esco_skill_level_3, #+ idcountry,
data = skills_twfe,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
summary(model_event_study)
model_twfe <- feols(
log_mentions ~ ai_product_exposure:post_chatgpt | esco_skill_level_3, #+ idcountry,
data = skills_twfe,
cluster = c(
#"idcountry",
"esco_skill_level_3"
)
)
summary(model_twfe)
library(tidyverse)
library(fixest)
library(broom)
library(lubridate)
source("R/helpers.R")
# read data ---------------------------------------------------------------
oja <- list.files("data/cedefop_skills_ovate_oja/csv", full.names = TRUE) %>%
map_dfr(read_csv)
oja_l3 <- list.files(
"data/cedefop_skills_ovate_skill_demand/csv/05_occupation_skill_across_occupations_hyper",
full.names = TRUE
) %>%
map_dfr(read_csv) %>%
mutate(
idcountry = ifelse(is.na(idcountry), countryset, idcountry),
esco_level_3_short = esco_level_3 # to match fromat of l2
) %>%
select(-c(countryset, esco_level_3))
ai_exposure <- read_ai_exposure_file(
"data/ai_exposure_scores/scored_esco_occupations_matched.csv",
level = 2
)
ai_exposure_l3 <- read_ai_exposure_file(
"data/ai_exposure_scores/scored_esco_occupations_matched.csv",
level = 3
)
# prep for model ----------------------------------------------------------
oja_twfe <- format_twfe_oja_data(oja, ai_exposure, level = 2)
oja_twfe_l3 <- format_twfe_oja_data(oja_l3, ai_exposure_l3, level = 3)
nrow(oja_twfe)
length(unique(oja_twfe$country_occupation_pair))
length(unique(oja_twfe$idesco_level_2))
length(unique(oja_twfe$idcountry))
length(unique(oja_twfe$dmax))
# Define the time of the event (ChatGPT release)
# ChatGPT release date: December 2022 (use the quarter end date)
t0 <- as.Date("2022-12-31")
# Ensure 'dmax' is in Date format, derive event_time for event studies
oja_twfe <- oja_twfe %>%
mutate(
dmax = as.Date(dmax),
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
oja_twfe_l3 <- oja_twfe_l3 %>%
mutate(
dmax = as.Date(dmax),
event_time = as.integer((year(dmax) - year(t0)) * 4 + (quarter(dmax) - quarter(t0)))
)
# List of exposure variables
exposure_vars <- c(
"ai_product_exposure_score",
"felten_exposure_score",
"webb_exposure_score",
"beta_eloundou"
)
# Plot time series --------------------------------------------------------
plot_exposure_quintiles <- function(data, level, exposure_var, n_tiles = 5) {
esco_level_col <- paste0("idesco_level_", level)
esco_level_short_col <- paste0("esco_level_", level, "_short")
data %>%
group_by(!!sym(esco_level_col)) %>%
filter(!is.na(!!sym(exposure_var))) %>%
summarise(
mean_score = mean(!!sym(exposure_var)),
esco_level_short = first(!!sym(esco_level_short_col)),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(mean_score, n_tiles)
) %>%
inner_join(
select(data, !!sym(esco_level_col), dmax, OJA),
by = esco_level_col
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:n_tiles)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mean_OJA = mean(OJA),
.groups = "drop"
) %>%
group_by(score_percentile) %>%
mutate(
OJA_index = mean_OJA / first(mean_OJA) * 100
) %>%
ggplot(
aes(
x = dmax,
y = OJA_index,
color = score_percentile,
lty = score_percentile
)
) +
geom_line() +
geom_vline(xintercept = as.Date("2022-11-30"), linetype = "dashed") +
labs(
title = paste("OJA Index by", exposure_var, "Exposure Quintiles"),
x = "Date",
y = "OJA Index",
color = paste(n_tiles, "-tiles"),
linetype = paste(n_tiles, "-tiles")
) +
theme_minimal()
}
plot_exposure_quintiles(
oja_twfe_l3, level = 3, exposure_var = exposure_vars[4], n_tiles = 7
)
# Plot time series --------------------------------------------------------
plot_exposure_quintiles <- function(data, level, exposure_var, n_tiles = 5) {
esco_level_col <- paste0("idesco_level_", level)
esco_level_short_col <- paste0("esco_level_", level, "_short")
data %>%
group_by(!!sym(esco_level_col)) %>%
filter(!is.na(!!sym(exposure_var))) %>%
summarise(
mean_score = mean(!!sym(exposure_var)),
esco_level_short = first(!!sym(esco_level_short_col)),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(mean_score, n_tiles)
) %>%
inner_join(
select(data, !!sym(esco_level_col), dmax, OJA),
by = esco_level_col
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:n_tiles)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mean_OJA = mean(OJA),
.groups = "drop"
) %>%
group_by(score_percentile) %>%
mutate(
OJA_index = mean_OJA / first(mean_OJA) * 100
) %>%
ggplot(
aes(
x = dmax,
#y = OJA_index,
y = mean_OJA,
color = score_percentile,
lty = score_percentile
)
) +
geom_line() +
geom_vline(xintercept = as.Date("2022-11-30"), linetype = "dashed") +
labs(
title = paste("OJA Index by", exposure_var, "Exposure Quintiles"),
x = "Date",
y = "OJA Index",
color = paste(n_tiles, "-tiles"),
linetype = paste(n_tiles, "-tiles")
) +
theme_minimal()
}
plot_exposure_quintiles(
oja_twfe_l3, level = 3, exposure_var = exposure_vars[4], n_tiles = 7
)
plot_exposure_quintiles(
oja_twfe, level = 2, exposure_var = exposure_vars[4], n_tiles = 7
)
plot_exposure_quintiles(
oja_twfe_l3, level = 3, exposure_var = exposure_vars[4], n_tiles = 7
)
# Plot time series --------------------------------------------------------
plot_exposure_quintiles <- function(data, level, exposure_var, n_tiles = 5) {
esco_level_col <- paste0("idesco_level_", level)
esco_level_short_col <- paste0("esco_level_", level, "_short")
data %>%
group_by(!!sym(esco_level_col)) %>%
filter(!is.na(!!sym(exposure_var))) %>%
summarise(
mean_score = mean(!!sym(exposure_var)),
esco_level_short = first(!!sym(esco_level_short_col)),
.groups = "drop"
) %>%
mutate(
score_percentile = ntile(mean_score, n_tiles)
) %>%
inner_join(
select(data, !!sym(esco_level_col), dmax, OJA),
by = esco_level_col
) %>%
mutate(score_percentile = factor(score_percentile, levels = 1:n_tiles)) %>%
group_by(score_percentile, dmax) %>%
arrange(dmax) %>%
summarise(
mean_OJA = mean(OJA),
.groups = "drop"
) %>%
group_by(score_percentile) %>%
mutate(
OJA_index = mean_OJA / first(mean_OJA) * 100
) %>%
ggplot(
aes(
x = dmax,
#y = OJA_index,
y = mean_OJA,
color = score_percentile,
lty = score_percentile
)
) +
geom_line() +
geom_vline(xintercept = as.Date("2022-11-30"), linetype = "dashed") +
scale_color_grey(start = 0.8, end = 0.2) +
labs(
title = paste("OJA Index by", exposure_var, "Exposure Quintiles"),
x = "Date",
y = "OJA Index",
color = paste(n_tiles, "-tiles"),
linetype = paste(n_tiles, "-tiles")
) +
theme_minimal()
}
plot_exposure_quintiles(
oja_twfe_l3, level = 3, exposure_var = exposure_vars[4], n_tiles = 7
)
plot_exposure_quintiles(
oja_twfe_l3, level = 3, exposure_var = exposure_vars[4], n_tiles = 10
)
